name: Create S3 Static Site

on:
  issues:
    types: [opened]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: startsWith(github.event.issue.title, 'front')

    permissions:
      issues: write
      contents: read
      id-token: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Extract & sanitize bucket name from Issue title
        id: name
        run: |
          RAW="${{ github.event.issue.title }}"
          # remove prefix 'front' e espaÃ§os, deixa minÃºsculo e troca espaÃ§os por '-'
          CLEAN="$(echo "$RAW" | sed 's/^front[[:space:]]*//I' | tr '[:upper:]' '[:lower:]' | tr -cs 'a-z0-9-' '-')"
          # garante tamanho vÃ¡lido (3-63) e remove hÃ­fens nas pontas
          CLEAN="$(echo "$CLEAN" | sed 's/^-*//; s/-*$//' | cut -c1-50)"
          echo "BUCKET_NAME=$CLEAN" >> $GITHUB_ENV
          echo "Bucket Name: $CLEAN"

      - name: Run Terraform
        working-directory: terraform/s3-bucket-static
        run: |
          terraform init -input=false
          terraform apply -auto-approve -input=false -var="bucket_name=${{ env.BUCKET_NAME }}"

      - name: Comment on the issue
        run: gh issue comment "$NUMBER" --repo "$REPO" --body "$BODY"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NUMBER: ${{ github.event.issue.number }}
          REPO: ${{ github.repository }}
          BODY: >
            S3 static site bucket created successfully for **${{ env.BUCKET_NAME }}** ðŸŽ‰
